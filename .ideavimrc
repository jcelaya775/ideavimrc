source ~/.vimrc
let mapleader = " "

set nu rnu
set idearefactormode=keep
set ideajoin
set scrolloff=4
set incsearch
set ignorecase
set smartcase

inoremap <M-h> <Esc>h
inoremap <M-j> <Esc>j
inoremap <M-k> <Esc>k
inoremap <M-l> <Esc>l
vnoremap <M-h> <Esc>h
vnoremap <M-j> <Esc>j
vnoremap <M-k> <Esc>k
vnoremap <M-l> <Esc>l
inoremap <C-h> <C-o>h
inoremap <C-j> <C-o>j
inoremap <C-k> <C-o>k
inoremap <C-l> <C-o>l

inoremap <C-del> <C-o>dw
inoremap <C-BS> <C-w>
noremap <C-del> dw
noremap <C-BS> db
noremap <BS> dh

nmap <leader>c <Action>(CodeMenu)
nmap <leader>m <Action>(EditorPopupMenu)

" Buffers
nmap <leader>x <Action>(CloseContent)
nmap <S-A-l> <Action>(NextTab)
nmap <S-A-h> <Action>(PreviousTab)
nmap <leader>1 <Action>(GoToTab1)
nmap <leader>2 <Action>(GoToTab2)
nmap <leader>3 <Action>(GoToTab3)
nmap <leader>4 <Action>(GoToTab4)
nmap <leader>5 <Action>(GoToTab5)
nmap <leader>6 <Action>(GoToTab6)
nmap <leader>7 <Action>(GoToTab7)
nmap <leader>8 <Action>(GoToTab8)
nmap <leader>9 <Action>(GoToTab9)

" LSP
nmap <leader>fr <Action>(FindUsages)
nmap gi <Action>(GotoImplementation)
nmap <leader>zf <Action>(ActivateAnalyzeDataflowfromToolWindow)
nmap <leader>zt <Action>(ActivateAnalyzeDataflowToToolWindow)
"nmap <A-n> <Action>(NextOccurence)
"nmap <A-p> <Action>(PreviousOccuence)

" VSC
nmap <leader>gd <Action>(Diff.ShowDiff)
nmap <leader>gb <Action>(Annotate)

" Move selection
nnoremap <C-A-k> :m -2<CR>
nnoremap <C-A-j> :m +1<CR>
inoremap <C-A-k> <Esc>:m -2<CR>gi
inoremap <C-A-j> <Esc>:m +1<CR>gi

" Move selected line / block of text in visual mode
vnoremap <S-j> :m '>+1<CR>gv=gv
vnoremap <S-k> :m '<-2<CR>gv=gv
xnoremap <S-j> :m '>+1<CR>gv=gv
xnoremap <S-k> :m '<-2<CR>gv=gv

" Escape
"nnoremap <C-[> :action EditorCodeBlockStart<CR>
"nnoremap <C-]> :action EditorCodeBlockEnd<CR>

" System clipboard
vmap <leader>y "+y
vmap <leader>d "+d
nmap <leader>y "+yy
nmap <leader>P "+P
nmap <leader>p "+p
vmap <leader>p "+p
vmap <leader>P "+P
vmap <leader>P "+P

" Scrolling
nnoremap <C-d> <C-d>M
nnoremap <C-u> <C-u>M
nnoremap <C-b> <C-b>M
nnoremap <C-f> <C-f>M

" Center
nnoremap * *zz
nnoremap # #zz
nnoremap <C-i> <C-i>zz
nnoremap <C-o> <C-o>zz


" Window switching
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j

" Tabs
map <leader><Tab> <Action>(RecentFiles)

" Extension
"packadd matchit

Plug 'easymotion/vim-easymotion'

nmap <leader>a <Action>(AddToHarpoon)
nmap <A-j> <Action>(GotoHarpoon1)
nmap <A-k> <Action>(GotoHarpoon2)
nmap <A-l> <Action>(GotoHarpoon3)
nmap <A-;> <Action>(GotoHarpoon4)
nmap <A-u> <Action>(GotoHarpoon5)
nmap <leader>j <Action>(SetHarpoon1)
nmap <leader>k <Action>(SetHarpoon2)
nmap <leader>l <Action>(SetHarpoon3)
nmap <leader>; <Action>(SetHarpoon4)
nmap <leader>' <Action>(SetHarpoon5)
nmap <A-e> <Action>(ShowHarpoon)

Plug 'tpope/vim-surround'

Plug 'preservim/nerdtree'
let g:NERDTreeMapActivateNode="l"
let g:NERDTreeMapJumpParent="h"

Plug 'unblevable/quick-scope'
let g:qs_highlight_on_keys = ['f', 'F', 't', 'T']

" Don't use Ex mode, use Q for formatting.
"map Q gq

Plug 'machakann/vim-highlightedyank'
Plug 'tpope/vim-commentary'


" -- Map IDE actions to IdeaVim -- https://jb.gg/abva4t
" Map \r to the Reformat Code action
" map \r <Action>(ReformatCode)

" Map <leader>d to start debug
"map <leader>d <Action>(Debug)

" Map \b to toggle the breakpoint on the current line
"map \b <Action>(ToggleLineBreakpoint)

source ~/.vimrc
